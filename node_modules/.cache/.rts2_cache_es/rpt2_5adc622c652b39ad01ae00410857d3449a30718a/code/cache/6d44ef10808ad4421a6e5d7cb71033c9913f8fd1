{"code":"import fetch from \"isomorphic-unfetch\";\nexport class Base {\n    apikey;\n    baseUrl;\n    constructor(config) {\n        this.apikey = config.apikey;\n        this.baseUrl = config.baseUrl || \"https://jsonplaceholder.typicode.com\";\n    }\n    invoke(endpoint, options) {\n        const url = '${this.baseUrl}${endpoint}';\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"api-key\": this.apikey,\n        };\n        const config = {\n            ...options,\n            headers,\n        };\n        return fetch(url, config).then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            else {\n                throw new Error(response.statusText);\n            }\n            ;\n        });\n    }\n}\n","references":["C:/Users/User02/sdk-demo/node_modules/isomorphic-unfetch/index.d.ts"],"dts":{"name":"C:/Users/User02/sdk-demo/dist/base.d.ts","writeByteOrderMark":false,"text":"type Config = {\n    apikey: string;\n    baseUrl: string;\n};\nexport declare abstract class Base {\n    private apikey;\n    private baseUrl;\n    constructor(config: Config);\n    protected invoke<T>(endpoint: string, options?: RequestInit): Promise<T>;\n}\nexport {};\n"}}
